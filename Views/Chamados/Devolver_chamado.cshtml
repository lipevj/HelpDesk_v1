@model HelpDeskTCC.Models.Chamados

@{
    ViewBag.Title = "Edit";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal container">

        <hr />


        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ChamadosId)

        <div class="form-group">
            @Html.LabelFor(model => model.ChamadosId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ChamadosId, new { htmlAttributes = new { style = "width: 50px", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.ChamadosId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { style = "width: 400px", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descrição, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Descrição", null, new { style = "width: 700px", @class = "form-control", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.Descrição, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Dt_Abertura, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Dt_Abertura, new { htmlAttributes = new { style = "width: 120px", @class = "form-control", @readonly = "readonly" } })

            </div>

            @Html.LabelFor(model => model.Solicitante, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Solicitante, new { htmlAttributes = new { style = "width: 120px", @class = "form-control", @readonly = "readonly" } })

            </div>

            @Html.LabelFor(model => model.PrioridadeId, "Prioridade", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("PrioridadeId", null, htmlAttributes: new { style = "width: 120px", @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.PrioridadeId)
                @Html.ValidationMessageFor(model => model.PrioridadeId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Prazo, "Prazo Fin.", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Prazo, new { htmlAttributes = new { style = "width: 120px", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Prazo, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.CategoriaId, "Categoria", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("CategoriaId", null, htmlAttributes: new { style = "width: 120px", @class = "form-control", @disabled = "disabled" })
                @Html.HiddenFor(model => model.CategoriaId)
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @*@Html.LabelFor(model => model.Dt_Encerramento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Dt_Encerramento, new { htmlAttributes = new { style = "width: 120px", @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Dt_Encerramento, "", new { @class = "text-danger" })
            </div>*@
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Dt_Atendimento, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <div class="col-md-10">
                @Html.HiddenFor(model => model.Dt_Atendimento, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.Dt_Atendimento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @*@Html.LabelFor(model => model.Responsavel, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.EditorFor(model => model.Responsavel, new { htmlAttributes = new { style = "width: 120px", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Responsavel, "", new { @class = "text-danger" })
            </div>*@

            @*@Html.LabelFor(model => model.StatusId, "Status", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-2">
                @Html.DropDownList("StatusId", null, htmlAttributes: new { style = "width: 120px", @class = "form-control" })
                @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
            </div>*@
        </div>

        @*<div class="form-group">
            @Html.LabelFor(model => model.Comentario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextArea("Comentario", null, new { style = "width: 700px", @class = "form-control", })
                @Html.ValidationMessageFor(model => model.Comentario, "", new { @class = "text-danger" })
            </div>
        </div>*@


        <h3> Retornar Ticket para Fila ?</h3>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Sim" class="btn btn-info" />
                @Html.ActionLink("Cancelar", "status_atendidos", null, new { @class = "btn btn-info" })

            </div>
        </div>
    </div>


}
@*<div>
    @Html.ActionLink("Voltar", "status_atendidos", null, new { @class = "btn btn-info" })
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
